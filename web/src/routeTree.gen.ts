/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as Auth2LayoutImport } from './routes/auth2/_layout'
import { Route as AuthLayoutImport } from './routes/auth/_layout'
import { Route as AppIdImport } from './routes/_app/$id'
import { Route as Auth2LayoutLoginImport } from './routes/auth2/_layout.login'
import { Route as AuthLayoutSignupSplatImport } from './routes/auth/_layout.signup.$'
import { Route as AuthLayoutLoginSplatImport } from './routes/auth/_layout.login.$'

// Create Virtual Routes

const Auth2Import = createFileRoute('/auth2')()
const AuthImport = createFileRoute('/auth')()

// Create/Update Routes

const Auth2Route = Auth2Import.update({
  id: '/auth2',
  path: '/auth2',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const Auth2LayoutRoute = Auth2LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => Auth2Route,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthRoute,
} as any)

const AppIdRoute = AppIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AppRoute,
} as any)

const Auth2LayoutLoginRoute = Auth2LayoutLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => Auth2LayoutRoute,
} as any)

const AuthLayoutSignupSplatRoute = AuthLayoutSignupSplatImport.update({
  id: '/signup/$',
  path: '/signup/$',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutLoginSplatRoute = AuthLayoutLoginSplatImport.update({
  id: '/login/$',
  path: '/login/$',
  getParentRoute: () => AuthLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_app/$id': {
      id: '/_app/$id'
      path: '/$id'
      fullPath: '/$id'
      preLoaderRoute: typeof AppIdImport
      parentRoute: typeof AppImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_layout': {
      id: '/auth/_layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof AuthRoute
    }
    '/auth2': {
      id: '/auth2'
      path: '/auth2'
      fullPath: '/auth2'
      preLoaderRoute: typeof Auth2Import
      parentRoute: typeof rootRoute
    }
    '/auth2/_layout': {
      id: '/auth2/_layout'
      path: '/auth2'
      fullPath: '/auth2'
      preLoaderRoute: typeof Auth2LayoutImport
      parentRoute: typeof Auth2Route
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/auth2/_layout/login': {
      id: '/auth2/_layout/login'
      path: '/login'
      fullPath: '/auth2/login'
      preLoaderRoute: typeof Auth2LayoutLoginImport
      parentRoute: typeof Auth2LayoutImport
    }
    '/auth/_layout/login/$': {
      id: '/auth/_layout/login/$'
      path: '/login/$'
      fullPath: '/auth/login/$'
      preLoaderRoute: typeof AuthLayoutLoginSplatImport
      parentRoute: typeof AuthLayoutImport
    }
    '/auth/_layout/signup/$': {
      id: '/auth/_layout/signup/$'
      path: '/signup/$'
      fullPath: '/auth/signup/$'
      preLoaderRoute: typeof AuthLayoutSignupSplatImport
      parentRoute: typeof AuthLayoutImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppIdRoute: typeof AppIdRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIdRoute: AppIdRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthLayoutRouteChildren {
  AuthLayoutLoginSplatRoute: typeof AuthLayoutLoginSplatRoute
  AuthLayoutSignupSplatRoute: typeof AuthLayoutSignupSplatRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutLoginSplatRoute: AuthLayoutLoginSplatRoute,
  AuthLayoutSignupSplatRoute: AuthLayoutSignupSplatRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface AuthRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface Auth2LayoutRouteChildren {
  Auth2LayoutLoginRoute: typeof Auth2LayoutLoginRoute
}

const Auth2LayoutRouteChildren: Auth2LayoutRouteChildren = {
  Auth2LayoutLoginRoute: Auth2LayoutLoginRoute,
}

const Auth2LayoutRouteWithChildren = Auth2LayoutRoute._addFileChildren(
  Auth2LayoutRouteChildren,
)

interface Auth2RouteChildren {
  Auth2LayoutRoute: typeof Auth2LayoutRouteWithChildren
}

const Auth2RouteChildren: Auth2RouteChildren = {
  Auth2LayoutRoute: Auth2LayoutRouteWithChildren,
}

const Auth2RouteWithChildren = Auth2Route._addFileChildren(Auth2RouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/$id': typeof AppIdRoute
  '/auth': typeof AuthLayoutRouteWithChildren
  '/auth2': typeof Auth2LayoutRouteWithChildren
  '/': typeof AppIndexRoute
  '/auth2/login': typeof Auth2LayoutLoginRoute
  '/auth/login/$': typeof AuthLayoutLoginSplatRoute
  '/auth/signup/$': typeof AuthLayoutSignupSplatRoute
}

export interface FileRoutesByTo {
  '/$id': typeof AppIdRoute
  '/auth': typeof AuthLayoutRouteWithChildren
  '/auth2': typeof Auth2LayoutRouteWithChildren
  '/': typeof AppIndexRoute
  '/auth2/login': typeof Auth2LayoutLoginRoute
  '/auth/login/$': typeof AuthLayoutLoginSplatRoute
  '/auth/signup/$': typeof AuthLayoutSignupSplatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_app/$id': typeof AppIdRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/_layout': typeof AuthLayoutRouteWithChildren
  '/auth2': typeof Auth2RouteWithChildren
  '/auth2/_layout': typeof Auth2LayoutRouteWithChildren
  '/_app/': typeof AppIndexRoute
  '/auth2/_layout/login': typeof Auth2LayoutLoginRoute
  '/auth/_layout/login/$': typeof AuthLayoutLoginSplatRoute
  '/auth/_layout/signup/$': typeof AuthLayoutSignupSplatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/$id'
    | '/auth'
    | '/auth2'
    | '/'
    | '/auth2/login'
    | '/auth/login/$'
    | '/auth/signup/$'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$id'
    | '/auth'
    | '/auth2'
    | '/'
    | '/auth2/login'
    | '/auth/login/$'
    | '/auth/signup/$'
  id:
    | '__root__'
    | '/_app'
    | '/_app/$id'
    | '/auth'
    | '/auth/_layout'
    | '/auth2'
    | '/auth2/_layout'
    | '/_app/'
    | '/auth2/_layout/login'
    | '/auth/_layout/login/$'
    | '/auth/_layout/signup/$'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  Auth2Route: typeof Auth2RouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  Auth2Route: Auth2RouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/auth",
        "/auth2"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/$id",
        "/_app/"
      ]
    },
    "/_app/$id": {
      "filePath": "_app/$id.tsx",
      "parent": "/_app"
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_layout"
      ]
    },
    "/auth/_layout": {
      "filePath": "auth/_layout.tsx",
      "parent": "/auth",
      "children": [
        "/auth/_layout/login/$",
        "/auth/_layout/signup/$"
      ]
    },
    "/auth2": {
      "filePath": "auth2",
      "children": [
        "/auth2/_layout"
      ]
    },
    "/auth2/_layout": {
      "filePath": "auth2/_layout.tsx",
      "parent": "/auth2",
      "children": [
        "/auth2/_layout/login"
      ]
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/auth2/_layout/login": {
      "filePath": "auth2/_layout.login.tsx",
      "parent": "/auth2/_layout"
    },
    "/auth/_layout/login/$": {
      "filePath": "auth/_layout.login.$.tsx",
      "parent": "/auth/_layout"
    },
    "/auth/_layout/signup/$": {
      "filePath": "auth/_layout.signup.$.tsx",
      "parent": "/auth/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
